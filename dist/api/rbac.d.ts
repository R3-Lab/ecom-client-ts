import { RequestsRbacCreateRole, RequestsRbacUpdateRole, RequestsRbacAddEcommerceSite, RequestsRbacCreatePermission, RequestsRbacUpdatePermission, RequestsRbacUpdateEcommerceSite } from "./types";
export declare const addEcommerceSite: (site: RequestsRbacAddEcommerceSite) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaEcommerceSite>;
export declare const getEcommerceSites: () => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaEcommerceSite[]>;
export declare const getEcommerceSite: (siteId: string) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaEcommerceSite>;
export declare const updateEcommerceSite: (siteId: string, site: RequestsRbacUpdateEcommerceSite) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaEcommerceSite>;
export declare const deleteEcommerceSite: (siteId: string) => Promise<null>;
export declare const createPermission: (permission: RequestsRbacCreatePermission) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaPermission>;
export declare const updatePermission: (permissionId: string, permission: RequestsRbacUpdatePermission) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaPermission>;
export declare const deletePermission: (permissionId: string) => Promise<null>;
export declare const createRole: (role: RequestsRbacCreateRole) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaRole>;
export declare const getRoles: () => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaRole[]>;
export declare const updateRole: (roleId: string, role: RequestsRbacUpdateRole) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaRole>;
export declare const deleteRole: (roleId: string) => Promise<null>;
export declare const addPermissionToRole: (roleId: string, permissionId: string) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaRolePermission>;
export declare const removePermissionFromRole: (roleId: string, permissionId: string) => Promise<null>;
export declare const addRoleToUser: (roleId: string, userId: string) => Promise<import("./openapi").Components.Schemas.EcommerceBackendSchemaUserRole>;
